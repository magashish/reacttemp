{"ast":null,"code":"(function ($) {\n  var toggle = document.getElementById(\"menu-toggle\");\n  console.log(toggle);\n  var menu = document.getElementById(\"menu\");\n  var close = document.getElementById(\"menu-close\");\n  toggle.addEventListener(\"click\", function (e) {\n    if (menu.classList.contains(\"open\")) {\n      menu.classList.remove(\"open\");\n    } else {\n      menu.classList.add(\"open\");\n    }\n  });\n  close.addEventListener(\"click\", function (e) {\n    menu.classList.remove(\"open\");\n  }); // Close menu after click on smaller screens\n\n  $(window).on(\"resize\", function () {\n    if ($(window).width() < 846) {\n      $(\".main-menu a\").on(\"click\", function () {\n        menu.classList.remove(\"open\");\n      });\n    }\n  });\n  $(\".owl-carousel\").owlCarousel({\n    items: 4,\n    lazyLoad: true,\n    loop: true,\n    dots: true,\n    margin: 30,\n    responsiveClass: true,\n    responsive: {\n      0: {\n        items: 1\n      },\n      600: {\n        items: 1\n      },\n      1000: {\n        items: 1\n      }\n    }\n  });\n  $(\".hover\").mouseleave(function () {\n    $(this).removeClass(\"hover\");\n  });\n  $(\".isotope-wrapper\").each(function () {\n    var $isotope = $(\".isotope-box\", this);\n    var $filterCheckboxes = $('input[type=\"radio\"]', this);\n\n    var filter = function () {\n      var type = $filterCheckboxes.filter(\":checked\").data(\"type\") || \"*\";\n\n      if (type !== \"*\") {\n        type = '[data-type=\"' + type + '\"]';\n      }\n\n      $isotope.isotope({\n        filter: type\n      });\n    };\n\n    $isotope.isotope({\n      itemSelector: \".isotope-item\",\n      layoutMode: \"masonry\"\n    });\n    $(this).on(\"change\", filter);\n    filter();\n  });\n  lightbox.option({\n    resizeDuration: 200,\n    wrapAround: true\n  });\n});","map":{"version":3,"sources":["/home/user/ashish/client/src/custom.js"],"names":["$","toggle","document","getElementById","console","log","menu","close","addEventListener","e","classList","contains","remove","add","window","on","width","owlCarousel","items","lazyLoad","loop","dots","margin","responsiveClass","responsive","mouseleave","removeClass","each","$isotope","$filterCheckboxes","filter","type","data","isotope","itemSelector","layoutMode","lightbox","option","resizeDuration","wrapAround"],"mappings":"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","sourcesContent":["(function($) {\r\n  var toggle = document.getElementById(\"menu-toggle\");\r\n  console.log(toggle);\r\n  var menu = document.getElementById(\"menu\");\r\n  var close = document.getElementById(\"menu-close\");\r\n\r\n  toggle.addEventListener(\"click\", function(e) {\r\n    if (menu.classList.contains(\"open\")) {\r\n      menu.classList.remove(\"open\");\r\n    } else {\r\n      menu.classList.add(\"open\");\r\n    }\r\n  });\r\n\r\n  close.addEventListener(\"click\", function(e) {\r\n    menu.classList.remove(\"open\");\r\n  });\r\n\r\n  // Close menu after click on smaller screens\r\n  $(window).on(\"resize\", function() {\r\n    if ($(window).width() < 846) {\r\n      $(\".main-menu a\").on(\"click\", function() {\r\n        menu.classList.remove(\"open\");\r\n      });\r\n    }\r\n  });\r\n\r\n  $(\".owl-carousel\").owlCarousel({\r\n    items: 4,\r\n    lazyLoad: true,\r\n    loop: true,\r\n    dots: true,\r\n    margin: 30,\r\n    responsiveClass: true,\r\n    responsive: {\r\n      0: {\r\n        items: 1\r\n      },\r\n      600: {\r\n        items: 1\r\n      },\r\n      1000: {\r\n        items: 1\r\n      }\r\n    }\r\n  });\r\n\r\n  $(\".hover\").mouseleave(function() {\r\n    $(this).removeClass(\"hover\");\r\n  });\r\n\r\n  $(\".isotope-wrapper\").each(function() {\r\n    var $isotope = $(\".isotope-box\", this);\r\n    var $filterCheckboxes = $('input[type=\"radio\"]', this);\r\n\r\n    var filter = function() {\r\n      var type = $filterCheckboxes.filter(\":checked\").data(\"type\") || \"*\";\r\n      if (type !== \"*\") {\r\n        type = '[data-type=\"' + type + '\"]';\r\n      }\r\n      $isotope.isotope({ filter: type });\r\n    };\r\n\r\n    $isotope.isotope({\r\n      itemSelector: \".isotope-item\",\r\n      layoutMode: \"masonry\"\r\n    });\r\n\r\n    $(this).on(\"change\", filter);\r\n    filter();\r\n  });\r\n\r\n  lightbox.option({\r\n    resizeDuration: 200,\r\n    wrapAround: true\r\n  });\r\n});\r\n"]},"metadata":{},"sourceType":"module"}